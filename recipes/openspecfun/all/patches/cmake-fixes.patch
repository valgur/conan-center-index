--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,9 +1,6 @@
-CMAKE_MINIMUM_REQUIRED(VERSION 3.8)
+CMAKE_MINIMUM_REQUIRED(VERSION 3.15)
 PROJECT(OpenSpecFun LANGUAGES C CXX Fortran)
 SET(VERSION 0.0.5)
-
-set(CMAKE_BUILD_TYPE Release)
-SET(CMAKE_Fortran_COMPILER gfortran)
 
 SET(SRC_FADDEEVA ${CMAKE_SOURCE_DIR}/Faddeeva)
 SET(FADDEEVA_src ${SRC_FADDEEVA}/Faddeeva.c)
@@ -55,24 +52,26 @@
 SET(CMAKE_Fortran_FLAGS -fno-optimize-sibling-calls)
 
 if(CMAKE_C_COMPILER_ID MATCHES GNU)
-    SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fno-gnu89-inline -std=c99")
+    STRING(APPEND CMAKE_C_FLAGS " -fno-gnu89-inline")
 elseif(CMAKE_C_COMPILER_ID MATCHES AppleClang
         OR
         CMAKE_C_COMPILER_ID MATCHES Clang)
-    SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fno-builtin -std=c99")
+    STRING(APPEND CMAKE_C_FLAGS " -fno-builtin")
+endif()
+if(NOT DEFINED CMAKE_C_STANDARD)
+    SET(CMAKE_C_STANDARD 99)
 endif()
 
-# Make both static and shared library share same name
-# Trick copied from https://cmake.org/pipermail/cmake/2006-May/009201.html
+if(BUILD_SHARED_LIBS)
 ADD_LIBRARY(openspecfun-shared SHARED ${AMOS_src} ${FADDEEVA_src})
 SET_TARGET_PROPERTIES(openspecfun-shared PROPERTIES
    OUTPUT_NAME openspecfun CLEAN_DIRECT_OUTPUT 1
    PUBLIC_HEADER "${FADDEEVA_inc}")
-
+INSTALL(TARGETS openspecfun-shared PUBLIC_HEADER)
+else()
 ADD_LIBRARY(openspecfun-static STATIC ${AMOS_src} ${FADDEEVA_src})
 SET_TARGET_PROPERTIES(openspecfun-static PROPERTIES
    OUTPUT_NAME openspecfun CLEAN_DIRECT_OUTPUT 1
    PUBLIC_HEADER "${FADDEEVA_inc}")
-
-INSTALL(TARGETS openspecfun-shared openspecfun-static
-    PUBLIC_HEADER)
+INSTALL(TARGETS openspecfun-static PUBLIC_HEADER)
+endif()
