From e3e2c08eb8080bb609b4ab851fbb75320cb03ad0 Mon Sep 17 00:00:00 2001
From: Martin Valgur <martin.valgur@gmail.com>
Date: Tue, 10 Sep 2024 19:16:08 +0300
Subject: [PATCH] Filter system libdir paths in build.rs

---
 Cargo.lock                   | 24 ++++++++++++++++++++++++
 Cargo.toml                   |  1 +
 gdk-pixbuf-loader/Cargo.toml |  1 +
 gdk-pixbuf-loader/build.rs   | 31 ++++++++++++++++++++-----------
 rsvg/Cargo.toml              |  1 +
 rsvg/build.rs                | 19 ++++++++++++++++++-
 rsvg_convert/Cargo.toml      |  1 +
 rsvg_convert/build.rs        | 22 +++++++++++++++++++++-
 8 files changed, 87 insertions(+), 13 deletions(-)

diff --git a/Cargo.lock b/Cargo.lock
index d04696d9..b8176329 100644
--- a/Cargo.lock
+++ b/Cargo.lock
@@ -673,6 +673,17 @@ dependencies = [
  "simd-adler32",
 ]
 
+[[package]]
+name = "filedescriptor"
+version = "0.8.2"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "7199d965852c3bac31f779ef99cbb4537f80e952e2d6aa0ffeb30cce00f4f46e"
+dependencies = [
+ "libc",
+ "thiserror",
+ "winapi",
+]
+
 [[package]]
 name = "flate2"
 version = "1.0.31"
@@ -789,6 +800,16 @@ dependencies = [
  "byteorder",
 ]
 
+[[package]]
+name = "gag"
+version = "1.0.0"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "a713bee13966e9fbffdf7193af71d54a6b35a0bb34997cd6c9519ebeb5005972"
+dependencies = [
+ "filedescriptor",
+ "tempfile",
+]
+
 [[package]]
 name = "gdk-pixbuf"
 version = "0.20.0"
@@ -1139,6 +1160,7 @@ dependencies = [
  "data-url",
  "encoding_rs",
  "float-cmp",
+ "gag",
  "gio",
  "glib",
  "image",
@@ -1716,6 +1738,7 @@ checksum = "8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184"
 name = "pixbufloader-svg"
 version = "0.0.1"
 dependencies = [
+ "gag",
  "gdk-pixbuf",
  "gio",
  "glib",
@@ -2020,6 +2043,7 @@ dependencies = [
  "clap_complete",
  "cssparser",
  "float-cmp",
+ "gag",
  "gio",
  "glib",
  "libc",
diff --git a/Cargo.toml b/Cargo.toml
index ac409e55..3be960a3 100644
--- a/Cargo.toml
+++ b/Cargo.toml
@@ -48,6 +48,7 @@ cssparser = "~0.31"
 data-url = "0.3.0"
 encoding_rs = "0.8.32"
 float-cmp = "0.9.0"
+gag = "1.0.0"
 gdk-pixbuf = "0.20"
 gdk-pixbuf-sys = "0.20"
 gio = "0.20"
diff --git a/gdk-pixbuf-loader/Cargo.toml b/gdk-pixbuf-loader/Cargo.toml
index 10cc337c..2305adb8 100644
--- a/gdk-pixbuf-loader/Cargo.toml
+++ b/gdk-pixbuf-loader/Cargo.toml
@@ -16,6 +16,7 @@ gio.workspace = true
 glib.workspace = true
 
 [build-dependencies]
+gag.workspace = true
 system-deps.workspace = true
 
 [package.metadata.system-deps]
diff --git a/gdk-pixbuf-loader/build.rs b/gdk-pixbuf-loader/build.rs
index 9e0b4bdf..56d1e4eb 100644
--- a/gdk-pixbuf-loader/build.rs
+++ b/gdk-pixbuf-loader/build.rs
@@ -1,14 +1,23 @@
-#[cfg(any(check, docsrs))]
-fn probe_system_deps() {
-    // do not probe libraries since librsvg-2 is generated by Meson
-}
-
-#[cfg(not(any(check, docsrs)))]
-fn probe_system_deps() {
-    // do not probe libraries since the docs.rs environment doesn't have them
-    system_deps::Config::new().probe().unwrap();
-}
+use system_deps::Config;
+use gag::BufferRedirect;
+use std::io::Read;
 
 fn main() {
-    probe_system_deps();
+    // Reorder rustc-link-search flags to make sure that system libdir paths are searched last
+    let mut buf = BufferRedirect::stdout().unwrap();
+    Config::new().probe().unwrap();
+    let mut output = String::new();
+    buf.read_to_string(&mut output).unwrap();
+    drop(buf);
+    let pattern = "cargo:rustc-link-search=native=/usr/lib";
+    for line in output.lines() {
+        if !line.contains(pattern) {
+            println!("{}", line);
+        }
+    }
+    for line in output.lines() {
+        if line.contains(pattern) {
+            println!("{}", line);
+        }
+    }
 }
diff --git a/rsvg/Cargo.toml b/rsvg/Cargo.toml
index 1d346cf9..0341e6c1 100644
--- a/rsvg/Cargo.toml
+++ b/rsvg/Cargo.toml
@@ -94,6 +94,7 @@ serde_json.workspace = true
 tempfile.workspace = true
 
 [build-dependencies]
+gag.workspace = true
 system-deps.workspace = true
 
 [lints.rust]
diff --git a/rsvg/build.rs b/rsvg/build.rs
index c10470b3..7e4bc104 100644
--- a/rsvg/build.rs
+++ b/rsvg/build.rs
@@ -1,6 +1,7 @@
+use gag::BufferRedirect;
 use std::env;
 use std::fs::File;
-use std::io::{BufWriter, Write};
+use std::io::{BufWriter, Write, Read};
 use std::path::Path;
 
 #[cfg(docsrs)]
@@ -10,10 +11,26 @@ fn probe_system_deps() {
 
 #[cfg(not(docsrs))]
 fn probe_system_deps() {
+    // Reorder rustc-link-search flags to make sure that system libdir paths are searched last
+    let mut buf = BufferRedirect::stdout().unwrap();
     if let Err(e) = system_deps::Config::new().probe() {
         eprintln!("{e}");
         std::process::exit(1);
     }
+    let mut output = String::new();
+    buf.read_to_string(&mut output).unwrap();
+    drop(buf);
+    let pattern = "cargo:rustc-link-search=native=/usr/lib";
+    for line in output.lines() {
+        if !line.contains(pattern) {
+            println!("{}", line);
+        }
+    }
+    for line in output.lines() {
+        if line.contains(pattern) {
+            println!("{}", line);
+        }
+    }
 }
 
 fn main() {
diff --git a/rsvg_convert/Cargo.toml b/rsvg_convert/Cargo.toml
index 379d240d..a02dd878 100644
--- a/rsvg_convert/Cargo.toml
+++ b/rsvg_convert/Cargo.toml
@@ -50,6 +50,7 @@ float-cmp.workspace = true
 librsvg = { workspace = true, features = ["test-utils"] }
 
 [build-dependencies]
+gag.workspace = true
 system-deps.workspace = true
 
 [lints.rust]
diff --git a/rsvg_convert/build.rs b/rsvg_convert/build.rs
index eec6d526..a78402ef 100644
--- a/rsvg_convert/build.rs
+++ b/rsvg_convert/build.rs
@@ -1,3 +1,23 @@
+use system_deps::Config;
+use gag::BufferRedirect;
+use std::io::Read;
+
 fn main() {
-    system_deps::Config::new().probe().unwrap();
+    // Reorder rustc-link-search flags to make sure that system libdir paths are searched last
+    let mut buf = BufferRedirect::stdout().unwrap();
+    Config::new().probe().unwrap();
+    let mut output = String::new();
+    buf.read_to_string(&mut output).unwrap();
+    drop(buf);
+    let pattern = "cargo:rustc-link-search=native=/usr/lib";
+    for line in output.lines() {
+        if !line.contains(pattern) {
+            println!("{}", line);
+        }
+    }
+    for line in output.lines() {
+        if line.contains(pattern) {
+            println!("{}", line);
+        }
+    }
 }
-- 
2.25.1

