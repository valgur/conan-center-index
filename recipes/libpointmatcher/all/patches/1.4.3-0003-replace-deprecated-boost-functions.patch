--- a/pointmatcher/IO.cpp
+++ b/pointmatcher/IO.cpp
@@ -360,7 +360,7 @@
 	if (!ifs.good() || !boost::filesystem::is_regular_file(fullPath))
 	#if BOOST_FILESYSTEM_VERSION >= 3
 		#if BOOST_VERSION >= 105000
-				throw runtime_error(string("Cannot open file ") + boost::filesystem::complete(fullPath).generic_string());
+				throw runtime_error(string("Cannot open file ") + boost::filesystem::absolute(fullPath).generic_string());
 		#else
 				throw runtime_error(string("Cannot open file ") + boost::filesystem3::complete(fullPath).generic_string());
 		#endif
@@ -375,7 +375,7 @@
 typename PointMatcher<T>::DataPoints PointMatcher<T>::DataPoints::load(const std::string& fileName)
 {
 	const boost::filesystem::path path(fileName);
-	const string& ext(boost::filesystem::extension(path));
+	const string& ext(path.extension().string());
 	if (boost::iequals(ext, ".vtk"))
 		return PointMatcherIO<T>::loadVTK(fileName);
 	else if (boost::iequals(ext, ".csv"))
@@ -809,7 +809,7 @@
 void PointMatcher<T>::DataPoints::save(const std::string& fileName, bool binary, unsigned precision) const
 {
 	const boost::filesystem::path path(fileName);
-	const string& ext(boost::filesystem::extension(path));
+	const string& ext(path.extension().string());
 	if (boost::iequals(ext, ".vtk"))
 		return PointMatcherIO<T>::saveVTK(*this, fileName, binary, precision);
 
